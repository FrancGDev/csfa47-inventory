generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(cuid())
  name           String? @unique
  hashedPassword String?

  @@map("users")
}

model Equipo {
  id              Int              @id @default(autoincrement())
  nombre          String // Nombre del equipo (PC, teclado, etc.)
  descripcion     String? // Detalles del equipo
  tipo            String // Tipo del equipo (ej. "PC", "Teclado", "Monitor")
  estado          String // Estado actual del equipo
  conjuntoId      Int? // Relación opcional con un conjunto (si aplica)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  conjuntoEquipos ConjuntoEquipo[]
  historial       Mantenimiento[] // Relación con el modelo Historial
}

model Conjunto {
  id          Int              @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  equipos     ConjuntoEquipo[]
}

model ConjuntoEquipo {
  id         Int      @id @default(autoincrement())
  conjuntoId Int
  equipoId   Int
  createdAt  DateTime @default(now())
  conjunto   Conjunto @relation(fields: [conjuntoId], references: [id])
  equipo     Equipo   @relation(fields: [equipoId], references: [id])
}

model Mantenimiento {
  id       Int      @id @default(autoincrement())
  equipoId Int // Relación con un equipo
  equipo   Equipo   @relation(fields: [equipoId], references: [id])
  falla    String // Acción realizada (reparación, revisión, etc.)
  acciones String? // Detalles adicionales
  fecha    DateTime @default(now())
}
