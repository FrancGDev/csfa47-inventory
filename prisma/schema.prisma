generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(cuid())
  name           String? @unique
  hashedPassword String?

  @@map("users")
}

model Equipo {
  id          Int         @id @default(autoincrement())
  nombre      String // Nombre del equipo (PC, teclado, etc.)
  descripcion String? // Detalles del equipo
  tipo        String // Tipo del equipo (ej. "PC", "Teclado", "Monitor")
  estado      Estado      @default(BUEN_ESTADO) // Estado actual del equipo
  conjuntoId  Int? // Relación opcional con un conjunto (si aplica)
  conjunto    Conjunto?   @relation(fields: [conjuntoId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  historiales Historial[] // Relación con el modelo Historial
}

enum Estado {
  BUEN_ESTADO
  NECESITA_REVISION
  NECESITA_REEMPLAZO
  DESCOMPUESTO
}

model Conjunto {
  id          Int      @id @default(autoincrement())
  nombre      String // Nombre del conjunto (ej. "PC de Aula 1")
  descripcion String? // Información opcional del conjunto
  equipos     Equipo[] // Relación con los equipos
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Historial {
  id         Int      @id @default(autoincrement())
  equipoId   Int // Relación con un equipo
  equipo     Equipo   @relation(fields: [equipoId], references: [id])
  accion     String // Acción realizada (reparación, revisión, etc.)
  comentario String? // Detalles adicionales
  fecha      DateTime @default(now())
}
